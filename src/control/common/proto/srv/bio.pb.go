// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bio.proto

package srv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BioErrorReq struct {
	UnmapErr             bool     `protobuf:"varint,1,opt,name=unmap_err,json=unmapErr,proto3" json:"unmap_err,omitempty"`
	UpdateErr            bool     `protobuf:"varint,2,opt,name=update_err,json=updateErr,proto3" json:"update_err,omitempty"`
	TgtId                int32    `protobuf:"varint,3,opt,name=tgt_id,json=tgtId,proto3" json:"tgt_id,omitempty"`
	DrpcListenerSock     string   `protobuf:"bytes,4,opt,name=drpcListenerSock,proto3" json:"drpcListenerSock,omitempty"`
	InstanceIdx          uint32   `protobuf:"varint,5,opt,name=instanceIdx,proto3" json:"instanceIdx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BioErrorReq) Reset()         { *m = BioErrorReq{} }
func (m *BioErrorReq) String() string { return proto.CompactTextString(m) }
func (*BioErrorReq) ProtoMessage()    {}
func (*BioErrorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_bio_1086a76d89b51fbd, []int{0}
}
func (m *BioErrorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BioErrorReq.Unmarshal(m, b)
}
func (m *BioErrorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BioErrorReq.Marshal(b, m, deterministic)
}
func (dst *BioErrorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BioErrorReq.Merge(dst, src)
}
func (m *BioErrorReq) XXX_Size() int {
	return xxx_messageInfo_BioErrorReq.Size(m)
}
func (m *BioErrorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BioErrorReq.DiscardUnknown(m)
}

var xxx_messageInfo_BioErrorReq proto.InternalMessageInfo

func (m *BioErrorReq) GetUnmapErr() bool {
	if m != nil {
		return m.UnmapErr
	}
	return false
}

func (m *BioErrorReq) GetUpdateErr() bool {
	if m != nil {
		return m.UpdateErr
	}
	return false
}

func (m *BioErrorReq) GetTgtId() int32 {
	if m != nil {
		return m.TgtId
	}
	return 0
}

func (m *BioErrorReq) GetDrpcListenerSock() string {
	if m != nil {
		return m.DrpcListenerSock
	}
	return ""
}

func (m *BioErrorReq) GetInstanceIdx() uint32 {
	if m != nil {
		return m.InstanceIdx
	}
	return 0
}

func init() {
	proto.RegisterType((*BioErrorReq)(nil), "srv.BioErrorReq")
}

func init() { proto.RegisterFile("bio.proto", fileDescriptor_bio_1086a76d89b51fbd) }

var fileDescriptor_bio_1086a76d89b51fbd = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0xca, 0xcc, 0xd7,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2e, 0x2a, 0x53, 0x5a, 0xc7, 0xc8, 0xc5, 0xed,
	0x94, 0x99, 0xef, 0x5a, 0x54, 0x94, 0x5f, 0x14, 0x94, 0x5a, 0x28, 0x24, 0xcd, 0xc5, 0x59, 0x9a,
	0x97, 0x9b, 0x58, 0x10, 0x9f, 0x5a, 0x54, 0x24, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x11, 0xc4, 0x01,
	0x16, 0x70, 0x2d, 0x2a, 0x12, 0x92, 0xe5, 0xe2, 0x2a, 0x2d, 0x48, 0x49, 0x2c, 0x49, 0x05, 0xcb,
	0x32, 0x81, 0x65, 0x39, 0x21, 0x22, 0x20, 0x69, 0x51, 0x2e, 0xb6, 0x92, 0xf4, 0x92, 0xf8, 0xcc,
	0x14, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0xd6, 0x92, 0xf4, 0x12, 0xcf, 0x14, 0x21, 0x2d,
	0x2e, 0x81, 0x94, 0xa2, 0x82, 0x64, 0x9f, 0xcc, 0xe2, 0x92, 0xd4, 0xbc, 0xd4, 0xa2, 0xe0, 0xfc,
	0xe4, 0x6c, 0x09, 0x16, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x0c, 0x71, 0x21, 0x05, 0x2e, 0xee, 0xcc,
	0xbc, 0xe2, 0x92, 0xc4, 0xbc, 0xe4, 0x54, 0xcf, 0x94, 0x0a, 0x09, 0x56, 0x05, 0x46, 0x0d, 0xde,
	0x20, 0x64, 0xa1, 0x24, 0x36, 0xb0, 0xe3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x20,
	0xac, 0x20, 0xc9, 0x00, 0x00, 0x00,
}
