// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage_query.proto

package mgmt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BioHealthReq struct {
	DevUuid              string   `protobuf:"bytes,1,opt,name=dev_uuid,json=devUuid,proto3" json:"dev_uuid,omitempty"`
	TgtId                string   `protobuf:"bytes,2,opt,name=tgt_id,json=tgtId,proto3" json:"tgt_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BioHealthReq) Reset()         { *m = BioHealthReq{} }
func (m *BioHealthReq) String() string { return proto.CompactTextString(m) }
func (*BioHealthReq) ProtoMessage()    {}
func (*BioHealthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{0}
}
func (m *BioHealthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BioHealthReq.Unmarshal(m, b)
}
func (m *BioHealthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BioHealthReq.Marshal(b, m, deterministic)
}
func (dst *BioHealthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BioHealthReq.Merge(dst, src)
}
func (m *BioHealthReq) XXX_Size() int {
	return xxx_messageInfo_BioHealthReq.Size(m)
}
func (m *BioHealthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BioHealthReq.DiscardUnknown(m)
}

var xxx_messageInfo_BioHealthReq proto.InternalMessageInfo

func (m *BioHealthReq) GetDevUuid() string {
	if m != nil {
		return m.DevUuid
	}
	return ""
}

func (m *BioHealthReq) GetTgtId() string {
	if m != nil {
		return m.TgtId
	}
	return ""
}

type BioHealthResp struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	DevUuid              string   `protobuf:"bytes,2,opt,name=dev_uuid,json=devUuid,proto3" json:"dev_uuid,omitempty"`
	ErrorCount           uint64   `protobuf:"varint,3,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Temperature          uint32   `protobuf:"varint,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	MediaErrors          uint64   `protobuf:"varint,5,opt,name=media_errors,json=mediaErrors,proto3" json:"media_errors,omitempty"`
	ReadErrs             uint32   `protobuf:"varint,6,opt,name=read_errs,json=readErrs,proto3" json:"read_errs,omitempty"`
	WriteErrs            uint32   `protobuf:"varint,7,opt,name=write_errs,json=writeErrs,proto3" json:"write_errs,omitempty"`
	UnmapErrs            uint32   `protobuf:"varint,8,opt,name=unmap_errs,json=unmapErrs,proto3" json:"unmap_errs,omitempty"`
	ChecksumErrs         uint32   `protobuf:"varint,9,opt,name=checksum_errs,json=checksumErrs,proto3" json:"checksum_errs,omitempty"`
	Temp                 bool     `protobuf:"varint,10,opt,name=temp,proto3" json:"temp,omitempty"`
	Spare                bool     `protobuf:"varint,11,opt,name=spare,proto3" json:"spare,omitempty"`
	Readonly             bool     `protobuf:"varint,12,opt,name=readonly,proto3" json:"readonly,omitempty"`
	DeviceReliability    bool     `protobuf:"varint,13,opt,name=device_reliability,json=deviceReliability,proto3" json:"device_reliability,omitempty"`
	VolatileMemory       bool     `protobuf:"varint,14,opt,name=volatile_memory,json=volatileMemory,proto3" json:"volatile_memory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BioHealthResp) Reset()         { *m = BioHealthResp{} }
func (m *BioHealthResp) String() string { return proto.CompactTextString(m) }
func (*BioHealthResp) ProtoMessage()    {}
func (*BioHealthResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{1}
}
func (m *BioHealthResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BioHealthResp.Unmarshal(m, b)
}
func (m *BioHealthResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BioHealthResp.Marshal(b, m, deterministic)
}
func (dst *BioHealthResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BioHealthResp.Merge(dst, src)
}
func (m *BioHealthResp) XXX_Size() int {
	return xxx_messageInfo_BioHealthResp.Size(m)
}
func (m *BioHealthResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BioHealthResp.DiscardUnknown(m)
}

var xxx_messageInfo_BioHealthResp proto.InternalMessageInfo

func (m *BioHealthResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BioHealthResp) GetDevUuid() string {
	if m != nil {
		return m.DevUuid
	}
	return ""
}

func (m *BioHealthResp) GetErrorCount() uint64 {
	if m != nil {
		return m.ErrorCount
	}
	return 0
}

func (m *BioHealthResp) GetTemperature() uint32 {
	if m != nil {
		return m.Temperature
	}
	return 0
}

func (m *BioHealthResp) GetMediaErrors() uint64 {
	if m != nil {
		return m.MediaErrors
	}
	return 0
}

func (m *BioHealthResp) GetReadErrs() uint32 {
	if m != nil {
		return m.ReadErrs
	}
	return 0
}

func (m *BioHealthResp) GetWriteErrs() uint32 {
	if m != nil {
		return m.WriteErrs
	}
	return 0
}

func (m *BioHealthResp) GetUnmapErrs() uint32 {
	if m != nil {
		return m.UnmapErrs
	}
	return 0
}

func (m *BioHealthResp) GetChecksumErrs() uint32 {
	if m != nil {
		return m.ChecksumErrs
	}
	return 0
}

func (m *BioHealthResp) GetTemp() bool {
	if m != nil {
		return m.Temp
	}
	return false
}

func (m *BioHealthResp) GetSpare() bool {
	if m != nil {
		return m.Spare
	}
	return false
}

func (m *BioHealthResp) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

func (m *BioHealthResp) GetDeviceReliability() bool {
	if m != nil {
		return m.DeviceReliability
	}
	return false
}

func (m *BioHealthResp) GetVolatileMemory() bool {
	if m != nil {
		return m.VolatileMemory
	}
	return false
}

type SmdDevReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmdDevReq) Reset()         { *m = SmdDevReq{} }
func (m *SmdDevReq) String() string { return proto.CompactTextString(m) }
func (*SmdDevReq) ProtoMessage()    {}
func (*SmdDevReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{2}
}
func (m *SmdDevReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmdDevReq.Unmarshal(m, b)
}
func (m *SmdDevReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmdDevReq.Marshal(b, m, deterministic)
}
func (dst *SmdDevReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmdDevReq.Merge(dst, src)
}
func (m *SmdDevReq) XXX_Size() int {
	return xxx_messageInfo_SmdDevReq.Size(m)
}
func (m *SmdDevReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SmdDevReq.DiscardUnknown(m)
}

var xxx_messageInfo_SmdDevReq proto.InternalMessageInfo

type SmdDevResp struct {
	Status               int32                `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Devices              []*SmdDevResp_Device `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SmdDevResp) Reset()         { *m = SmdDevResp{} }
func (m *SmdDevResp) String() string { return proto.CompactTextString(m) }
func (*SmdDevResp) ProtoMessage()    {}
func (*SmdDevResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{3}
}
func (m *SmdDevResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmdDevResp.Unmarshal(m, b)
}
func (m *SmdDevResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmdDevResp.Marshal(b, m, deterministic)
}
func (dst *SmdDevResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmdDevResp.Merge(dst, src)
}
func (m *SmdDevResp) XXX_Size() int {
	return xxx_messageInfo_SmdDevResp.Size(m)
}
func (m *SmdDevResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SmdDevResp.DiscardUnknown(m)
}

var xxx_messageInfo_SmdDevResp proto.InternalMessageInfo

func (m *SmdDevResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SmdDevResp) GetDevices() []*SmdDevResp_Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type SmdDevResp_Device struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TgtIds               []int32  `protobuf:"varint,2,rep,packed,name=tgt_ids,json=tgtIds,proto3" json:"tgt_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SmdDevResp_Device) Reset()         { *m = SmdDevResp_Device{} }
func (m *SmdDevResp_Device) String() string { return proto.CompactTextString(m) }
func (*SmdDevResp_Device) ProtoMessage()    {}
func (*SmdDevResp_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{3, 0}
}
func (m *SmdDevResp_Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SmdDevResp_Device.Unmarshal(m, b)
}
func (m *SmdDevResp_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SmdDevResp_Device.Marshal(b, m, deterministic)
}
func (dst *SmdDevResp_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmdDevResp_Device.Merge(dst, src)
}
func (m *SmdDevResp_Device) XXX_Size() int {
	return xxx_messageInfo_SmdDevResp_Device.Size(m)
}
func (m *SmdDevResp_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_SmdDevResp_Device.DiscardUnknown(m)
}

var xxx_messageInfo_SmdDevResp_Device proto.InternalMessageInfo

func (m *SmdDevResp_Device) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SmdDevResp_Device) GetTgtIds() []int32 {
	if m != nil {
		return m.TgtIds
	}
	return nil
}

type DevStateReq struct {
	DevUuid              string   `protobuf:"bytes,1,opt,name=dev_uuid,json=devUuid,proto3" json:"dev_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevStateReq) Reset()         { *m = DevStateReq{} }
func (m *DevStateReq) String() string { return proto.CompactTextString(m) }
func (*DevStateReq) ProtoMessage()    {}
func (*DevStateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{4}
}
func (m *DevStateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevStateReq.Unmarshal(m, b)
}
func (m *DevStateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevStateReq.Marshal(b, m, deterministic)
}
func (dst *DevStateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevStateReq.Merge(dst, src)
}
func (m *DevStateReq) XXX_Size() int {
	return xxx_messageInfo_DevStateReq.Size(m)
}
func (m *DevStateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DevStateReq.DiscardUnknown(m)
}

var xxx_messageInfo_DevStateReq proto.InternalMessageInfo

func (m *DevStateReq) GetDevUuid() string {
	if m != nil {
		return m.DevUuid
	}
	return ""
}

type DevStateResp struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	DevUuid              string   `protobuf:"bytes,2,opt,name=dev_uuid,json=devUuid,proto3" json:"dev_uuid,omitempty"`
	DevState             string   `protobuf:"bytes,3,opt,name=dev_state,json=devState,proto3" json:"dev_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevStateResp) Reset()         { *m = DevStateResp{} }
func (m *DevStateResp) String() string { return proto.CompactTextString(m) }
func (*DevStateResp) ProtoMessage()    {}
func (*DevStateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_query_4cc8d76955fbf86a, []int{5}
}
func (m *DevStateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevStateResp.Unmarshal(m, b)
}
func (m *DevStateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevStateResp.Marshal(b, m, deterministic)
}
func (dst *DevStateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevStateResp.Merge(dst, src)
}
func (m *DevStateResp) XXX_Size() int {
	return xxx_messageInfo_DevStateResp.Size(m)
}
func (m *DevStateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DevStateResp.DiscardUnknown(m)
}

var xxx_messageInfo_DevStateResp proto.InternalMessageInfo

func (m *DevStateResp) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DevStateResp) GetDevUuid() string {
	if m != nil {
		return m.DevUuid
	}
	return ""
}

func (m *DevStateResp) GetDevState() string {
	if m != nil {
		return m.DevState
	}
	return ""
}

func init() {
	proto.RegisterType((*BioHealthReq)(nil), "mgmt.BioHealthReq")
	proto.RegisterType((*BioHealthResp)(nil), "mgmt.BioHealthResp")
	proto.RegisterType((*SmdDevReq)(nil), "mgmt.SmdDevReq")
	proto.RegisterType((*SmdDevResp)(nil), "mgmt.SmdDevResp")
	proto.RegisterType((*SmdDevResp_Device)(nil), "mgmt.SmdDevResp.Device")
	proto.RegisterType((*DevStateReq)(nil), "mgmt.DevStateReq")
	proto.RegisterType((*DevStateResp)(nil), "mgmt.DevStateResp")
}

func init() { proto.RegisterFile("storage_query.proto", fileDescriptor_storage_query_4cc8d76955fbf86a) }

var fileDescriptor_storage_query_4cc8d76955fbf86a = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcf, 0x8e, 0xd3, 0x3c,
	0x14, 0xc5, 0x95, 0xb6, 0x49, 0x9b, 0x9b, 0x74, 0x3e, 0x7d, 0xe6, 0xcf, 0x98, 0x19, 0x21, 0x42,
	0x58, 0x90, 0x0d, 0x95, 0x00, 0xb1, 0x47, 0xd0, 0x91, 0x60, 0xc1, 0xc6, 0x23, 0xb6, 0x44, 0x9e,
	0xfa, 0xaa, 0x63, 0x91, 0x34, 0xa9, 0xed, 0x04, 0xf5, 0x25, 0x78, 0x2c, 0x9e, 0x0b, 0xe5, 0x9a,
	0xd0, 0xce, 0x66, 0x16, 0xec, 0x7c, 0x7f, 0xe7, 0xf8, 0xe4, 0x2a, 0x39, 0x81, 0x07, 0xd6, 0x35,
	0x46, 0x6e, 0xb1, 0xdc, 0x77, 0x68, 0x0e, 0xab, 0xd6, 0x34, 0xae, 0x61, 0xb3, 0x7a, 0x5b, 0xbb,
	0xfc, 0x3d, 0xa4, 0x1f, 0x74, 0xf3, 0x09, 0x65, 0xe5, 0x6e, 0x05, 0xee, 0xd9, 0x13, 0x58, 0x28,
	0xec, 0xcb, 0xae, 0xd3, 0x8a, 0x07, 0x59, 0x50, 0xc4, 0x62, 0xae, 0xb0, 0xff, 0xda, 0x69, 0xc5,
	0x1e, 0x41, 0xe4, 0xb6, 0xae, 0xd4, 0x8a, 0x4f, 0x48, 0x08, 0xdd, 0xd6, 0x7d, 0x56, 0xf9, 0xaf,
	0x29, 0x2c, 0x4f, 0x22, 0x6c, 0xcb, 0x1e, 0x43, 0x64, 0x9d, 0x74, 0x9d, 0xa5, 0x84, 0x50, 0xfc,
	0x99, 0xee, 0x64, 0x4f, 0xee, 0x66, 0x3f, 0x83, 0x04, 0x8d, 0x69, 0x4c, 0xb9, 0x69, 0xba, 0x9d,
	0xe3, 0xd3, 0x2c, 0x28, 0x66, 0x02, 0x08, 0x7d, 0x1c, 0x08, 0xcb, 0x20, 0x71, 0x58, 0xb7, 0x68,
	0xa4, 0xeb, 0x0c, 0xf2, 0x59, 0x16, 0x14, 0x4b, 0x71, 0x8a, 0xd8, 0x73, 0x48, 0x6b, 0x54, 0x5a,
	0x96, 0x74, 0xcb, 0xf2, 0x90, 0x32, 0x12, 0x62, 0x57, 0x84, 0xd8, 0x25, 0xc4, 0x06, 0xa5, 0x1a,
	0x1c, 0x96, 0x47, 0x14, 0xb1, 0x18, 0xc0, 0x95, 0x31, 0x96, 0x3d, 0x05, 0xf8, 0x61, 0xb4, 0x43,
	0xaf, 0xce, 0x49, 0x8d, 0x89, 0x8c, 0x72, 0xb7, 0xab, 0x65, 0xeb, 0xe5, 0x85, 0x97, 0x89, 0x90,
	0xfc, 0x02, 0x96, 0x9b, 0x5b, 0xdc, 0x7c, 0xb7, 0x5d, 0xed, 0x1d, 0x31, 0x39, 0xd2, 0x11, 0x92,
	0x89, 0xc1, 0x6c, 0xd8, 0x98, 0x43, 0x16, 0x14, 0x0b, 0x41, 0x67, 0xf6, 0x10, 0x42, 0xdb, 0x4a,
	0x83, 0x3c, 0x21, 0xe8, 0x07, 0x76, 0x01, 0xb4, 0x58, 0xb3, 0xab, 0x0e, 0x3c, 0x25, 0xe1, 0xef,
	0xcc, 0x5e, 0x01, 0x53, 0xd8, 0xeb, 0x0d, 0x96, 0x06, 0x2b, 0x2d, 0x6f, 0x74, 0xa5, 0xdd, 0x81,
	0x2f, 0xc9, 0xf5, 0xbf, 0x57, 0xc4, 0x51, 0x60, 0x2f, 0xe1, 0xbf, 0xbe, 0xa9, 0xa4, 0xd3, 0x15,
	0x96, 0x35, 0xd6, 0x8d, 0x39, 0xf0, 0x33, 0xf2, 0x9e, 0x8d, 0xf8, 0x0b, 0xd1, 0x3c, 0x81, 0xf8,
	0xba, 0x56, 0x6b, 0xec, 0x05, 0xee, 0xf3, 0x9f, 0x01, 0xc0, 0x38, 0xdd, 0xf3, 0x49, 0x5f, 0xc3,
	0xdc, 0x3f, 0xd1, 0xf2, 0x49, 0x36, 0x2d, 0x92, 0x37, 0xe7, 0xab, 0xa1, 0x56, 0xab, 0xe3, 0xd5,
	0xd5, 0xda, 0x6f, 0x34, 0xfa, 0x2e, 0xde, 0x41, 0xe4, 0xd1, 0xf0, 0x3a, 0x4e, 0x7a, 0x46, 0x67,
	0x76, 0x0e, 0x73, 0x5f, 0x32, 0x1f, 0x18, 0x8a, 0x88, 0x5a, 0x66, 0xf3, 0x02, 0x92, 0x35, 0xf6,
	0xd7, 0x4e, 0x3a, 0xbc, 0xbf, 0xa7, 0xf9, 0x37, 0x48, 0x8f, 0xce, 0x7f, 0xab, 0xe3, 0x25, 0xc4,
	0x83, 0x34, 0x18, 0x91, 0xca, 0x18, 0x8b, 0xc1, 0x4b, 0x99, 0x37, 0x11, 0xfd, 0x3f, 0x6f, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xed, 0x28, 0x09, 0x5b, 0x56, 0x03, 0x00, 0x00,
}
